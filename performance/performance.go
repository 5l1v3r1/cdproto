// Package performance provides the Chrome Debugging Protocol
// commands, types, and events for the Performance domain.
//
// Generated by the chromedp-gen command.
package performance

import (
	"context"
	"encoding/json"
)

// Code generated by chromedp-gen. DO NOT EDIT.

// Executor is the common interface for executing a command.
type Executor interface {
	// Execute executes the command.
	Execute(context.Context, string, json.Marshaler, json.Unmarshaler) error
}

// DisableParams disable collecting and reporting metrics.
type DisableParams struct{}

// Disable disable collecting and reporting metrics.
func Disable() *DisableParams {
	return &DisableParams{}
}

// Do executes Performance.disable against the provided context.
func (p *DisableParams) Do(ctxt context.Context, h Executor) (err error) {
	return h.Execute(ctxt, CommandDisable, nil, nil)
}

// EnableParams enable collecting and reporting metrics.
type EnableParams struct{}

// Enable enable collecting and reporting metrics.
func Enable() *EnableParams {
	return &EnableParams{}
}

// Do executes Performance.enable against the provided context.
func (p *EnableParams) Do(ctxt context.Context, h Executor) (err error) {
	return h.Execute(ctxt, CommandEnable, nil, nil)
}

// GetMetricsParams retrieve current values of run-time metrics.
type GetMetricsParams struct{}

// GetMetrics retrieve current values of run-time metrics.
func GetMetrics() *GetMetricsParams {
	return &GetMetricsParams{}
}

// GetMetricsReturns return values.
type GetMetricsReturns struct {
	Metrics []*Metric `json:"metrics,omitempty"` // Current values for run-time metrics.
}

// Do executes Performance.getMetrics against the provided context.
//
// returns:
//   metrics - Current values for run-time metrics.
func (p *GetMetricsParams) Do(ctxt context.Context, h Executor) (metrics []*Metric, err error) {
	// execute
	var res GetMetricsReturns
	err = h.Execute(ctxt, CommandGetMetrics, nil, &res)
	if err != nil {
		return nil, err
	}

	return res.Metrics, nil
}

// Command names.
const (
	CommandDisable    = "Performance.disable"
	CommandEnable     = "Performance.enable"
	CommandGetMetrics = "Performance.getMetrics"
)
