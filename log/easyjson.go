// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  log

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( ClearParams ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ClearParams ) UnmarshalJSON([]byte) error { return nil }
func ( ClearParams ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ClearParams ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ClearParams *ClearParams

func ( DisableParams ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* DisableParams ) UnmarshalJSON([]byte) error { return nil }
func ( DisableParams ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* DisableParams ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DisableParams *DisableParams

func ( EnableParams ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EnableParams ) UnmarshalJSON([]byte) error { return nil }
func ( EnableParams ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EnableParams ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EnableParams *EnableParams

func ( Entry ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Entry ) UnmarshalJSON([]byte) error { return nil }
func ( Entry ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Entry ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Entry *Entry

func ( EventEntryAdded ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventEntryAdded ) UnmarshalJSON([]byte) error { return nil }
func ( EventEntryAdded ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventEntryAdded ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventEntryAdded *EventEntryAdded

func ( StartViolationsReportParams ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* StartViolationsReportParams ) UnmarshalJSON([]byte) error { return nil }
func ( StartViolationsReportParams ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* StartViolationsReportParams ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_StartViolationsReportParams *StartViolationsReportParams

func ( StopViolationsReportParams ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* StopViolationsReportParams ) UnmarshalJSON([]byte) error { return nil }
func ( StopViolationsReportParams ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* StopViolationsReportParams ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_StopViolationsReportParams *StopViolationsReportParams

func ( ViolationSetting ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ViolationSetting ) UnmarshalJSON([]byte) error { return nil }
func ( ViolationSetting ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ViolationSetting ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ViolationSetting *ViolationSetting
