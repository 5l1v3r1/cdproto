package target

// AUTOGENERATED. DO NOT EDIT.

import (
	. "github.com/knq/chromedp/cdp"
)

var (
	_ BackendNode
	_ BackendNodeID
	_ ComputedProperty
	_ ErrorType
	_ Frame
	_ FrameID
	_ LoaderID
	_ Message
	_ MessageError
	_ MethodType
	_ Node
	_ NodeID
	_ NodeType
	_ PseudoType
	_ RGBA
	_ ShadowRootType
	_ Timestamp
)

// EventTargetCreated issued when a possible inspection target is created.
type EventTargetCreated struct {
	TargetInfo *TargetInfo `json:"targetInfo,omitempty"`
}

// EventTargetDestroyed issued when a target is destroyed.
type EventTargetDestroyed struct {
	TargetID TargetID `json:"targetId,omitempty"`
}

// EventAttachedToTarget issued when attached to target because of
// auto-attach or attachToTarget command.
type EventAttachedToTarget struct {
	TargetInfo         *TargetInfo `json:"targetInfo,omitempty"`
	WaitingForDebugger bool        `json:"waitingForDebugger,omitempty"`
}

// EventDetachedFromTarget issued when detached from target for any reason
// (including detachFromTarget command).
type EventDetachedFromTarget struct {
	TargetID TargetID `json:"targetId,omitempty"`
}

// EventReceivedMessageFromTarget notifies about new protocol message from
// attached target.
type EventReceivedMessageFromTarget struct {
	TargetID TargetID `json:"targetId,omitempty"`
	Message  string   `json:"message,omitempty"`
}

// EventTypes is all event types in the domain.
var EventTypes = []MethodType{
	EventTargetTargetCreated,
	EventTargetTargetDestroyed,
	EventTargetAttachedToTarget,
	EventTargetDetachedFromTarget,
	EventTargetReceivedMessageFromTarget,
}
