// Package security provides the Chrome Debugging Protocol
// commands, types, and events for the Security domain.
//
// Security.
//
// Generated by the chromedp-gen command.
package security

// AUTOGENERATED. DO NOT EDIT.

import (
	"context"

	cdp "github.com/knq/chromedp/cdp"
)

// EnableParams enables tracking security state changes.
type EnableParams struct{}

// Enable enables tracking security state changes.
func Enable() *EnableParams {
	return &EnableParams{}
}

// Do executes Security.enable against the provided context and
// target handler.
func (p *EnableParams) Do(ctxt context.Context, h cdp.Handler) (err error) {
	return h.Execute(ctxt, cdp.CommandSecurityEnable, nil, nil)
}

// DisableParams disables tracking security state changes.
type DisableParams struct{}

// Disable disables tracking security state changes.
func Disable() *DisableParams {
	return &DisableParams{}
}

// Do executes Security.disable against the provided context and
// target handler.
func (p *DisableParams) Do(ctxt context.Context, h cdp.Handler) (err error) {
	return h.Execute(ctxt, cdp.CommandSecurityDisable, nil, nil)
}

// ShowCertificateViewerParams displays native dialog with the certificate
// details.
type ShowCertificateViewerParams struct{}

// ShowCertificateViewer displays native dialog with the certificate details.
func ShowCertificateViewer() *ShowCertificateViewerParams {
	return &ShowCertificateViewerParams{}
}

// Do executes Security.showCertificateViewer against the provided context and
// target handler.
func (p *ShowCertificateViewerParams) Do(ctxt context.Context, h cdp.Handler) (err error) {
	return h.Execute(ctxt, cdp.CommandSecurityShowCertificateViewer, nil, nil)
}
