// Package inspector provides the Chrome Debugging Protocol
// commands, types, and events for the Inspector domain.
//
// Generated by the chromedp-gen command.
package inspector

import (
	"context"
	"encoding/json"
)

// Code generated by chromedp-gen. DO NOT EDIT.

// Executor is the common interface for executing a command.
type Executor interface {
	// Execute executes the command.
	Execute(context.Context, string, json.Marshaler, json.Unmarshaler) error
}

// DisableParams disables inspector domain notifications.
type DisableParams struct{}

// Disable disables inspector domain notifications.
func Disable() *DisableParams {
	return &DisableParams{}
}

// Do executes Inspector.disable against the provided context.
func (p *DisableParams) Do(ctxt context.Context, h Executor) (err error) {
	return h.Execute(ctxt, CommandDisable, nil, nil)
}

// EnableParams enables inspector domain notifications.
type EnableParams struct{}

// Enable enables inspector domain notifications.
func Enable() *EnableParams {
	return &EnableParams{}
}

// Do executes Inspector.enable against the provided context.
func (p *EnableParams) Do(ctxt context.Context, h Executor) (err error) {
	return h.Execute(ctxt, CommandEnable, nil, nil)
}

// Command names.
const (
	CommandDisable = "Inspector.disable"
	CommandEnable  = "Inspector.enable"
)
